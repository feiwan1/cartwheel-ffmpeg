From 5e3613b0dd138f2cee40d0b9d48ea53d40d2a93c Mon Sep 17 00:00:00 2001
From: Fei Wang <fei.w.wang@intel.com>
Date: Mon, 1 Jul 2024 14:07:19 +0800
Subject: [PATCH 1/9] lavc/vaapi_{decode, av1}: Fix memory leak in fail
 codepath

Signed-off-by: Fei Wang <fei.w.wang@intel.com>
---
 libavcodec/vaapi_av1.c    | 9 +++++----
 libavcodec/vaapi_decode.c | 5 +++--
 2 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/libavcodec/vaapi_av1.c b/libavcodec/vaapi_av1.c
index fe0852318d..5451b6055b 100644
--- a/libavcodec/vaapi_av1.c
+++ b/libavcodec/vaapi_av1.c
@@ -404,14 +404,15 @@ static int vaapi_av1_decode_slice(AVCodecContext *avctx,
 
     nb_params = s->tg_end - s->tg_start + 1;
     if (ctx->nb_slice_params < nb_params) {
-        ctx->slice_params = av_realloc_array(ctx->slice_params,
-                                             nb_params,
-                                             sizeof(*ctx->slice_params));
-        if (!ctx->slice_params) {
+        VASliceParameterBufferAV1 *tmp = av_realloc_array(ctx->slice_params,
+                                                          nb_params,
+                                                          sizeof(*ctx->slice_params));
+        if (!tmp) {
             ctx->nb_slice_params = 0;
             err = AVERROR(ENOMEM);
             goto fail;
         }
+        ctx->slice_params    = tmp;
         ctx->nb_slice_params = nb_params;
     }
 
diff --git a/libavcodec/vaapi_decode.c b/libavcodec/vaapi_decode.c
index 936d958c0b..b9ff173aa5 100644
--- a/libavcodec/vaapi_decode.c
+++ b/libavcodec/vaapi_decode.c
@@ -74,13 +74,14 @@ int ff_vaapi_decode_make_slice_buffer(AVCodecContext *avctx,
 
     av_assert0(pic->nb_slices <= pic->slices_allocated);
     if (pic->nb_slices == pic->slices_allocated) {
-        pic->slice_buffers =
+        VABufferID *tmp =
             av_realloc_array(pic->slice_buffers,
                              pic->slices_allocated ? pic->slices_allocated * 2 : 64,
                              2 * sizeof(*pic->slice_buffers));
-        if (!pic->slice_buffers)
+        if (!tmp)
             return AVERROR(ENOMEM);
 
+        pic->slice_buffers = tmp;
         pic->slices_allocated = pic->slices_allocated ? pic->slices_allocated * 2 : 64;
     }
     av_assert0(pic->nb_slices + 1 <= pic->slices_allocated);
-- 
2.34.1

